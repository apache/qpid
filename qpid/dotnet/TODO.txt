
* Failover.
  * record and replay necessary commands.
  * Review new API methods for fail over requirements.
    i.e. lock on mutex for non-blocking methods, FailoverSupport (for blocking methods)

* transactions Tx.Select and Tx.Commit
  * Do the TxSelect message after opening a transactional channel

* createSession with prefetch (warning: prefetch partly added)
  * Do the BasicQos message after opening channel (sets up prefetch).

* Port Connection URL support.

* .NET currently only supports no-ack mode. Allow acknowledgement support.
  * Implement the PreAcknowledge ack mode. Add preDeliver/postDeliver methods in AmqSession like the Java client.
  * Implement Recover() with Basic.Recover.

* Blocking receive i.e. Basic.Get

* Implement durable subscriptions.

* SSL. SSLStream composed over NetworkStream.

* Implement a Async IO socket transport.
  Compare against blocking socket transport and configure default appropriately.

* support multiple versions of AMQP from the same client.
