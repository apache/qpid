#!/bin/sh
# Run the acl tests.
srcdir=`dirname $0`
PYTHON_DIR=$srcdir/../../../python
DATA_DIR=`pwd`/data_dir

trap stop_brokers INT TERM QUIT

start_brokers() {
    ../qpidd --daemon --port 0 --no-module-dir --data-dir $DATA_DIR --load-module ../.libs/acl.so --acl-file policy.acl --auth no > qpidd.port
    LOCAL_PORT=`cat qpidd.port`
}

stop_brokers() {
        ../qpidd -q --port $LOCAL_PORT
}

test_loading_acl_from_absolute_path(){
   ../qpidd --daemon --port 0 --no-module-dir --no-data-dir --auth no --load-module ../.libs/acl.so --acl-file $PWD/policy.acl -t --log-to-file temp.log  2>/dev/null
    PORT=`grep "Listening on TCP port" temp.log | awk '{print $8}'`
    ACL_FILE=`grep "notice Read ACL file" temp.log | awk '{print $7}'`    
    rm -rf temp.log
   ../qpidd -q --port $PORT
   if test $ACL_FILE != "\"$PWD/policy.acl\""; then
     echo "unable to load policy file from an absolute path";
     return 1;
   fi
}

if test -d ${PYTHON_DIR} ;  then
    rm -rf $DATA_DIR
    mkdir -p $DATA_DIR
    cp $srcdir/policy.acl $DATA_DIR
    start_brokers
    echo "Running acl tests using brokers on ports $LOCAL_PORT"
    PYTHONPATH=$PYTHON_DIR
    export PYTHONPATH
    $srcdir/acl.py -v -s $srcdir/../../../specs/amqp.0-10-qpid-errata.xml -b localhost:$LOCAL_PORT --port $LOCAL_PORT
    RETCODE=$?   
    stop_brokers
    test_loading_acl_from_absolute_path
    RETCODE2=$?
    rm -rf $DATA_DIR
    if test x$RETCODE != x0 -o x$RETCODE2 != x0; then 
        echo "FAIL acl tests"; exit 1;
    fi
fi

